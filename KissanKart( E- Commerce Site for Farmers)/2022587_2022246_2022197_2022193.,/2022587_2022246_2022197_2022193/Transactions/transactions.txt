NON CONFLICTING:


START TRANSACTION;
-- Read operation
SELECT * FROM User WHERE UserId = 1;
-- Reading user information for user with ID 1
-- Write operation
UPDATE User SET LastName = 'SACHDEVA' WHERE UserId = 1;
-- Updating the last name of the user with ID 1
-- Read operation
SELECT * FROM User WHERE UserId = 2;
-- Reading user information for user with ID 2
rollback;
commit;



START TRANSACTION;

-- Transaction: Write operations
UPDATE Products SET Price = Price * 1.1 WHERE Category = 'Tools';
-- Increase the price of all products in the 'Tools' category by 10%

UPDATE Products SET Availability = Availability - 1 WHERE ProductId = 2;
-- Decrease the availability of a specific product by 1

INSERT INTO ShoppingCart (ProductName, Quantity, TotalPrice, UserId) 
VALUES ('Tools Set', 2, 1100.00, 5);
-- Add a new product to the shopping cart
COMMIT;
select * from ShoppingCart;
select * from Products;




START TRANSACTION;

-- Read operation
SELECT * FROM ShoppingCart WHERE UserId = 5;
-- Reading user's shopping cart

-- Read operation
SELECT * FROM Products WHERE Availability > 0;
-- Checking available products

-- Write operation
INSERT INTO ShoppingCart (ProductId, ProductName, Quantity, TotalPrice, UserId) 
VALUES (5, 'Gloves', 1, 499.00, 5);
-- Adding a new product to the user's shopping cart

ROLLBACK;





START TRANSACTION;

-- Read operations
SELECT * FROM Products WHERE Category = 'Tools';
-- Reading information about tools

SELECT * FROM ShoppingCart WHERE UserId = 3;
-- Reading user's shopping cart

-- Write operation
UPDATE Products SET Price = Price * 0.9 WHERE ProductId = 1;
-- Applying a discount of 10%

-- Read operation
SELECT * FROM Products WHERE Availability > 0;
-- Checking available products

commit;





CONFLICTING :


-- Transaction 1
start TRANSACTION;

-- Read operation
SELECT * FROM Products WHERE Category = 'Tools';

-- Update operation
UPDATE Products SET Price = Price * 0.9 WHERE Category = 'Tools'; -- Applying a different discount of 10%

-- Transaction 2 (concurrent with Transaction 1)
start TRANSACTION;


-- Update operation
UPDATE Products SET Price = Price * 0.8 WHERE Category = 'Tools'; -- Applying a different discount of 20%

-- Commit transaction 2
COMMIT;




-- Transaction 1
START TRANSACTION;

-- Read operation
SELECT * FROM DeliveryAgent WHERE Availability = TRUE;

-- Update operation
UPDATE DeliveryAgent SET Availability = FALSE WHERE AgentId = 1; -- Assuming AgentId 1 is changing

-- Transaction 2 (concurrent with Transaction 1)
START TRANSACTION;

-- Update operation
UPDATE DeliveryAgent SET Availability = true WHERE AgentId = 1; -- assuming admin is changing

-- Commit transaction 2
COMMIT;